(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{152:function(t,a,s){"use strict";s.r(a);var n=s(6),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#第一章-三种基础的数据结构"}},[t._v("第一章 三种基础的数据结构")]),s("ul",[s("li",[s("a",{attrs:{href:"#栈"}},[t._v("栈")]),s("ul",[s("li",[s("a",{attrs:{href:"#栈在不同应用场景的含义"}},[t._v("栈在不同应用场景的含义")])])])]),s("li",[s("a",{attrs:{href:"#堆"}},[t._v("堆")])]),s("li",[s("a",{attrs:{href:"#队列"}},[t._v("队列")])])])])])]),s("p"),t._v(" "),s("h1",{attrs:{id:"第一章-三种基础的数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章-三种基础的数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一章 三种基础的数据结构")]),t._v(" "),s("h2",{attrs:{id:"栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),s("p",[t._v("这种存取方式的特点可总结为"),s("strong",[t._v("先进先出，后进后出")]),t._v("（ LIFO，Last In，First Out ）。")]),t._v(" "),s("h3",{attrs:{id:"栈在不同应用场景的含义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈在不同应用场景的含义","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈在不同应用场景的含义")]),t._v(" "),s("ol",[s("li",[t._v("栈是一种数据结构，它表达的是数据的一种存取方式，是一种理论基础。")]),t._v(" "),s("li",[t._v("栈可用来规定代码的执行顺序，在 JavaScript 中叫作"),s("strong",[t._v("函数调用栈")]),t._v("（ call stack ）。")]),t._v(" "),s("li",[t._v("栈表达的是一种数据在内存中的存储区域，通常叫做栈区。但是 JavaScript 作为一门高级语言，并没有同其他语言那样区分栈区或堆区，因此在这里不做扩展。我们可以简单粗暴地认为在 JavaScript 中，所有地数据都是存放在堆内存空间中地。")])]),t._v(" "),s("h2",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆","aria-hidden":"true"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),s("p",[t._v("堆数据结构通常是一种树状结构。")]),t._v(" "),s("p",[t._v("下图是 testHeap 示意图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-chara-img.oss-cn-shanghai.aliyuncs.com/blog-img/%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/JavaScript%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E8%A7%A3%E5%AF%86/%E5%A0%86%E7%A4%BA%E6%84%8F%E5%9B%BE.png",alt:"testHeap示意图"}})]),t._v(" "),s("p",[t._v("该示意图可以用字面量对象的形式体现出来：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" testHeap "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  b"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("20")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    m"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("100")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    n"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("110")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当我们想要访问 a 时，只需通过"),s("code",[t._v("testHeap.a")]),t._v("来访问即可，而不用关心 a、b、c 的具体顺序。")]),t._v(" "),s("h2",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列","aria-hidden":"true"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),s("p",[t._v("在 JavaScript 中，理解队列数据结构的目的是为了搞清楚时间循环（ Event Loop ）机制到底是怎么回事。")]),t._v(" "),s("p",[t._v("队列（ queue ）是一种先进先出（ FIFO ）的数据结构。正如排队过安检一样，排在队伍前面的人一定是最先过安检的人。")])])}],!1,null,null,null);r.options.__file="第一章.md";a.default=r.exports}}]);